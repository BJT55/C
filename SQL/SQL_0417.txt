事务:
事务就是把若干个SQL的操作打包成一个整体
实际执行的时候,如果这个整体执行了一半,就遇到了突发情况,MySQL就能保证突发情况恢复之后,数据库没有受到破坏.

通过"回滚"(roll back)机制来对数据进行还原(mysql 中有一个机制binlog,记录了每一个mysql的具体操作,就可以依据这个历史记录,把执行一半的事务还原回去)

事务的特点:
1.原子性:是事务的核心特点;
2.一致性:保证数据库的数据在执行事务之前和之后都是合理的;
3.持久性:一旦事务执行成功,此时这样的数据就是持久保存在磁盘上的,即使重启主机也存在;
4.隔离性:考虑多个事务并发执行的时候(多线程)
         (mysql也是可以支持并发的,可以有多个客户端同事来执行一些sql,如果是普通的SQL,MySQL自身可以保证并发执行的结果是对的;如果是事务包含多个SQL,此时并发执行事务,就可能出现一些问题)




并发执行事务可能遇到的问题:
1.脏读: 第一个事务正在修改数据,在事务执行一半的时候,第二个事务B来读取了这个数据,结果事务A继续执行的时候把刚才的数据改变,此时B读取的数据就叫做"脏读";

--解决方法:"写加锁",事务A在修改的时候,事务B不能去读取数据,直到事务A的数据修改完毕,提交了之后,事务B才能读;

2.不可重复读: 在一个事务中,分两次数据,读到的两个结果不一样,就是不可重复读,这是因为在读的时候,其他事务又在修改数据;

--解决方法:"读加锁",事务B在读取事务A的时候,事务A不能修改数据;

(引入"读加锁""写加锁",降低了事务之间的并发程度,同时提高了事物之间的隔离性)

3.幻读: 如果事务A在读取数据的过程中,另一个事务B对读取的记录是没有修改的,但是可能会对这个表进行插入/删除的操作,此时就可能导致A分两次读到的结果不一样;
例如:在读取Student类的时候没有修改当前类,但新增了Teacher类,当再次读取的时候,就会发现新增了东西~

--解决方法:"串行化",事务和事务之间彻底串行执行(不涉及并发了)




并发执行事务会遇到以上一些问题,针对此情况,可以通过设置MySQL的事务隔离级别来实现:
1.read uncommitted :没有任何限制,并发程度最高,隔离程度最低;
2.read committed :相当于写加锁,可以处理脏读问题,但是仍然存在不可重复读和幻读,并发程度降低了,隔离程度提高了;
3.repeatable read :相当于对写和读都有加锁,可以处理脏读和不可重复读问题,但仍然存在幻读,并发程度降低了,隔离程度提高了;
4.serializable :串行化执行,并发程度最低,隔离程度最高;

(mysql默认级别为--repeatable read,可以根据实际情况来决定使用其他的隔离级别)


maven:是一个打包工具/项目工具







 















