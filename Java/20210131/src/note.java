public class note {
//    时间复杂度 和 空间复杂度
//    单纯从代码的角度来衡量一段程序执行的快马和占用内存的多少，定性的，粗略的分析
//    精准的分析：通过运行时间/占用的内存/外存字节数 成本比较高

//    O 渐进表示法：
//    1.找到一段代码中的“基本操作”
//    2.估算 基本操作 执行次数和问题规模之间的数学关系
//    3.保留多项式的最高次项 同时去掉系数
//    注意：计算空间复杂度的时候
//    1.计算的是额外的空间
//    2.方法嗲用也是占用空间的
//    3.空间时可以重复利用的

//    线性表：
//    顺序表：元素在内存上连续
//    链表：元素在内存上不连续

//    顺序表往往是基于数组来实现的：java的数组只是提供了最基础的功能（取长度，取下标对应的元素）
//                            顺序表就会在这个基础上有新增了很多功能，增删改查
//    List  接口： ArrayList类 顺序表 、 LinkedList类 链表

//    可变对象 里面的内容可以修改
//    对于有些语言 ，顺序表可能是不可变得，这个时候如果插入或者删除，就需要：
//
//
}
