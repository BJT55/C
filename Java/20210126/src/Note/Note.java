package Note;

public class Note {
//    为什么要引入泛型：
//    为了让一份代码（类、方法、接口）能够支持多种数据类型

//    基本用法：
//    1.创建泛型类：类名后面 < E > 来执行泛型参数（E 相当于一个形参，代表一个类型，在当前泛型实例化前必须确定，必须是引用类型，如需使用内置类，则需要使用对应包装类）
//    2.实例化泛型类：实例化泛型类的时候，就需要显式的告知实例对应的泛型参数是什么类型
//    3.类型边界：定义泛型类的时候，对应泛型参数做出限制
//    4.通配符：使用泛型类的时候（尤其是以泛型类作为方法参数的时候，对于泛型类参数做出限制，extends，super）

//    泛型背后的原理：类型擦除
//    java 的泛型本质上都是使用 Object， 在编译过程中，编译器会自动帮我们完成类型转换，以及类型校验的工作
//    在程序运行的过程中，都是以 Object 的方式来执行的


}
