public class note {
//    数据结构：
//    时间复杂度：衡量程序执行快慢的指标（粗略，定性的分析）
//             O（1） 代表执行基本操作次数与问题规模无关，不代表只执行一次

//    计算阶乘的时间复杂度
//    基本操作：方法调用/比较操作/相乘操作（这些的执行次数是一样的）

//    时间复杂度快慢/大小
//    O(1) < O(logN) < O(N) < O(N*logN)
//    < O(N^2) < O(N^3) < O(2^N)

//    空间复杂度：不算临时空间，参数空间

//    线性表的两种典型实现：
//    1.顺序表：元素和元素之间，处在连续的内存空间上
//             顺序表是数据结构中，更广义的概念
//             数组是 java 语法中，更具体的概念
//             数组是实现顺序表的一种典型方式
//    2.链表：  元素和元素之间，可以处在不连续的内存空间上
//             在逻辑上是线性结构，但在物理结构上并不一定是连续的

//    java 实现顺序表的时候，有一个专门的类 ArrayList（）

}
